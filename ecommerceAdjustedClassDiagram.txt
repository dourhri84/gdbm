Class Client{
 login String isUnique
 password String
 phone Integer
 creationDate Datetime
 firstName String
 lastName String
 name String
 gov_id String
 type String
}
Class Address{
 addr_id String isUnique
 road String
 district String
 town String
 zipcode Integer
}
Class Order{
 oid Integer isUnique
 odatetime Datetime
 shippingFee Float
 total Float
 sequenceNumber Integer
}
Class Product{
 reference String isUnique
 designation String
 description String
}
Class Seller{
 seller_gov_id Integer isUnique
 companyName String
}
Class Category{
 code String isUnique
 cname String
 vatRate Float
}
Class Contains{
 orderedQty Integer
 unitPrice Float
 discountRate Float
}
Class CreditCard{
 card_number Integer isUnique
 expireDate Date
 cvc Integer
 status Boolean
 bank String
 interestRate Float
 limit Float
}
Class DebitCard{
 card_number Integer isUnique
 expireDate Date
 cvc Integer
 status Boolean
 bank String
 balance Float
 label String
}
Class Payment{
 pm_number Integer
 pm_datetime Datetime
}
Class RemoteAccess{
 idAccess Integer
 timeAccess Datetime
 ip String
 webBrowser String
 OSNameVersion String
}
Association Referral{
 Class Client
 Roles referrer,referred
 Multiplicity <0..*>,<0..1>
}
Association Provides{
 Class Seller,Product
 Multiplicity <1..*>,<1..*>
 Attribute inStockQty Integer,warranty Integer
}
Association Contains_Order{
 Class Contains,Order
 Multiplicity <?-?>,<1..*>
}
Association Contains_Product{
 Class Contains,Product
 Multiplicity <?-?>,<1..*>
}
Association Contains_Seller{
 Class Contains,Seller
 Multiplicity <?-?>,<1..*>
}
Association pays{
 Class Client,Order
 Multiplicity <1..1>,<0..*>
}
Association makes{
 Class Client,Order
 Multiplicity <1..1>,<0..*>
}
Association Concerns1{
 Class Payment,DebitCard
 Multiplicity <0..*>,<0..1>
}
Association Concerns2{
 Class Payment,CreditCard
 Multiplicity <0..*>,<0..1>
}
Association uses{
 Class Payment,RemoteAccess
 Multiplicity <0..1>,<1..1>
}
Association has{
 Class Client,Address
 Multiplicity <0..*>,<1..1>
}
Association is_composed_of{
Class Category,Product
Multiplicity <1..1>,<1..*>
}
Association is_composed_of2{
 Class Order,Payment
 Multiplicity <1..1>,<0..1>
}